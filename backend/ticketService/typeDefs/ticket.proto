syntax = "proto3";

service TicketService {
    rpc suggestOriginDestination(Name) returns (OriginDestinationList) {}
    rpc getNews(Empty) returns (NewsList) {}
    rpc searchTickets(SearchParams) returns (TicketList) {}
    rpc fillTicketParams(TicketId) returns (UserTicket) {}
    rpc parchase(UserTicketId) returns (UserTicket) {}
    rpc getUserTickets(UserId) returns (UserTicketList) {}
}

message Empty {}

message UserId {
    string userId = 1;
}

message TicketId {
    string ticketId = 1;
}

message UserTicketId {
    string userTicketId = 1;
}

message OriginDestinationList {
    repeated OriginDestination list = 1;
}

message TicketList {
    repeated Ticket list = 1;
}

message UserTicketList {
    repeated UserTicket list = 1;
}

message NewsList {
    repeated News list = 1;
}

message SearchParams {
    float pct = 1;
    uint32 value_in_cents = 2;
}

message Name {
    string name = 1;
}

message OriginDestination {
    string country = 1;
    string city = 2;
    string airport = 3;
    string iata = 4;
}

message Ticket {
    uint32 flight_id = 1;
    string origin = 2;
    string description = 3;
    uint64 departure_utc = 4;
    uint64 arrival_local_time = 5;
    uint64 y_price = 6;
    uint64 j_price = 7;
    uint64 f_price = 8;
    uint64 y_class_free_capacity = 9;
    uint64 j_class_free_capacity = 10;
    uint64 f_class_free_capacity = 11;
    uint64 equipment = 12;
}

message UserTicket {
    repeated Passenger passengers = 1;
    Ticket ticket = 2;
}

message Passenger {
    string name = 1;
    string family = 2;
    string passport = 3;
}

message News {
    string title = 1;
    string image_url = 2;
    string redirect_url = 3;
}